{"ast":null,"code":"\"use strict\";\n/* tslint:disable:no-void-expression */\n\nvar _asyncToGenerator = require(\"D:/angular/pr1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst escape_identifier_1 = require(\"@databases/escape-identifier\");\n\nconst sql_1 = require(\"@databases/sql\");\n\nconst push_to_async_iterable_1 = require(\"@databases/push-to-async-iterable\");\n\nconst {\n  codeFrameColumns\n} = require('@babel/code-frame');\n\nconst mysqlFormat = {\n  escapeIdentifier: str => (0, escape_identifier_1.escapeMySqlIdentifier)(str),\n  formatValue: value => ({\n    placeholder: '?',\n    value\n  })\n};\n\nclass MySqlDriver {\n  constructor(client, handlers, acquireLockTimeoutMilliseconds) {\n    this._endCalled = false;\n\n    this._onIdleError = err => {\n      if (this._endCalled) {\n        return;\n      }\n\n      this.client.removeListener('error', this._onIdleError);\n\n      if (this._removeFromPool) {\n        this._removeFromPool();\n      }\n\n      if (this._idleErrorEventHandler) {\n        this._idleErrorEventHandler(err);\n      }\n    };\n\n    this.acquireLockTimeoutMilliseconds = acquireLockTimeoutMilliseconds;\n    this.client = client;\n    this._handlers = handlers;\n  }\n\n  onAddingToPool(removeFromPool, idleErrorEventHandler) {\n    this._removeFromPool = removeFromPool;\n    this._idleErrorEventHandler = idleErrorEventHandler;\n  }\n\n  onActive() {\n    this.client.removeListener('error', this._onIdleError);\n  }\n\n  onIdle() {\n    this.client.on('error', this._onIdleError);\n  }\n\n  dispose() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this._endCalled) {\n        _this._endCalled = true;\n\n        _this.client.on('error', _this._onIdleError);\n\n        _this.client.destroy();\n      }\n    })();\n  }\n\n  canRecycleConnectionAfterError(_err) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      try {\n        let timeout;\n        const result = yield Promise.race([_this2.client.query('BEGIN TRANSACTION READ ONLY;SELECT 1 AS result;COMMIT;'), new Promise(r => {\n          timeout = setTimeout(r, 100);\n        })]);\n\n        if (timeout !== undefined) {\n          clearTimeout(timeout);\n        }\n\n        return ((_c = (_b = (_a = result === null || result === void 0 ? void 0 : result[1]) === null || _a === void 0 ? void 0 : _a.rows) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.result) === 1;\n      } catch (ex) {\n        return false;\n      }\n    })();\n  }\n\n  beginTransaction(options) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const parameters = [];\n\n      if (options) {\n        if (options.readOnly) {\n          parameters.push('READ ONLY');\n        } else if (options.readOnly === false) {\n          parameters.push('READ WRITE');\n        }\n\n        if (options.withConsistentSnapshot) {\n          parameters.push('WITH CONSISTENT SNAPSHOT');\n        }\n      }\n\n      if (parameters.length) {\n        yield execute(_this3.client, `START TRANSACTION ${parameters.join(', ')}`);\n      } else {\n        yield execute(_this3.client, `BEGIN`);\n      }\n    })();\n  }\n\n  commitTransaction() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield execute(_this4.client, `COMMIT`);\n    })();\n  }\n\n  rollbackTransaction() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield execute(_this5.client, `ROLLBACK`);\n    })();\n  }\n\n  shouldRetryTransactionFailure(_transactionOptions, _ex, _failureCount) {\n    return _asyncToGenerator(function* () {\n      return false;\n    })();\n  }\n\n  createSavepoint(savepointName) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield execute(_this6.client, `SAVEPOINT ${savepointName}`);\n    })();\n  }\n\n  releaseSavepoint(savepointName) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield execute(_this7.client, `RELEASE SAVEPOINT ${savepointName}`);\n    })();\n  }\n\n  rollbackToSavepoint(savepointName) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      yield execute(_this8.client, `ROLLBACK TO SAVEPOINT ${savepointName}`);\n    })();\n  }\n\n  _executeQuery(query) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const q = query.format(mysqlFormat);\n\n      if (_this9._handlers.onQueryStart) {\n        enforceUndefined(_this9._handlers.onQueryStart(query, q));\n      }\n\n      const results = yield executeQueryInternal(_this9.client, query, q, _this9._handlers);\n\n      if (_this9._handlers.onQueryResults) {\n        enforceUndefined(_this9._handlers.onQueryResults(query, q, results));\n      }\n\n      return results;\n    })();\n  }\n\n  executeAndReturnAll(queries) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      const results = new Array(queries.length);\n\n      for (let i = 0; i < queries.length; i++) {\n        results[i] = yield _this10._executeQuery(queries[i]);\n      }\n\n      return results;\n    })();\n  }\n\n  executeAndReturnLast(queries) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      if (queries.length === 0) {\n        return [];\n      }\n\n      for (let i = 0; i < queries.length - 1; i++) {\n        yield _this11._executeQuery(queries[i]);\n      }\n\n      return yield _this11._executeQuery(queries[queries.length - 1]);\n    })();\n  }\n\n  queryStream(query, options) {\n    if (!(0, sql_1.isSqlQuery)(query)) {\n      throw new Error('Invalid query, you must use @databases/sql to create your queries.');\n    }\n\n    const {\n      text,\n      values\n    } = query.format(mysqlFormat);\n    const highWaterMark = options && options.highWaterMark || 5;\n    const connection = this.client.connection;\n    return (0, push_to_async_iterable_1.default)(handlers => {\n      const stream = connection.query(text, values);\n      stream.on('result', handlers.onData);\n      stream.on('error', handlers.onError);\n      stream.on('end', handlers.onEnd);\n      return {\n        dispose: () => {\n          connection.resume();\n        },\n        pause: () => {\n          connection.pause();\n        },\n        resume: () => {\n          connection.resume();\n        },\n        highWaterMark\n      };\n    });\n  }\n\n  queryNodeStream(query, options) {\n    if (!(0, sql_1.isSqlQuery)(query)) {\n      throw new Error('Invalid query, you must use @databases/sql to create your queries.');\n    }\n\n    const {\n      text,\n      values\n    } = query.format(mysqlFormat);\n    const connection = this.client.connection;\n    const result = connection.query(text, values).stream(options); // tslint:disable-next-line:no-unbound-method\n\n    const on = result.on;\n    const handlers = this._handlers;\n    return Object.assign(result, {\n      on(event, cb) {\n        if (event !== 'error') return on.call(this, event, cb);\n        return on.call(this, event, ex => {\n          // TODO: consider using https://github.com/Vincit/db-errors\n          try {\n            handleError(ex, query, {\n              text,\n              values\n            }, handlers);\n          } catch (ex) {\n            cb(ex);\n          }\n        });\n      }\n\n    });\n  }\n\n}\n\nexports.default = MySqlDriver;\n\nfunction execute(_x, _x2) {\n  return _execute.apply(this, arguments);\n}\n\nfunction _execute() {\n  _execute = _asyncToGenerator(function* (client, query) {\n    try {\n      yield client.query(query);\n    } catch (ex) {\n      throw Object.assign(new Error(ex.message), ex);\n    }\n  });\n  return _execute.apply(this, arguments);\n}\n\nfunction executeQueryInternal(_x3, _x4, _x5, _x6) {\n  return _executeQueryInternal.apply(this, arguments);\n}\n\nfunction _executeQueryInternal() {\n  _executeQueryInternal = _asyncToGenerator(function* (client, query, q, handlers) {\n    try {\n      // const result: [RowDataPacket[] | RowDataPacket[][] | OkPacket | OkPacket[] | ResultSetHeader, FieldPacket[]]\n      const [result] = yield client.query(q.text, q.values);\n      return result;\n    } catch (ex) {\n      handleError(ex, query, q, handlers);\n    }\n  });\n  return _executeQueryInternal.apply(this, arguments);\n}\n\nfunction handleError(ex, query, q, handlers) {\n  let err;\n  const mySqlError = parseMySqlError(ex, q.text);\n\n  if (mySqlError) {\n    const {\n      start,\n      end,\n      message: oldMessage\n    } = mySqlError;\n    const message = oldMessage.replace(/ near \\'((?:.|\\n)+)\\' at line (\\d+)$/, ` near:\\n\\n${codeFrameColumns(q.text, {\n      start,\n      end\n    })}\\n`);\n    err = Object.assign(new Error(message), ex, {\n      message\n    });\n  } else {\n    err = Object.assign(new Error(isError(ex) ? ex.message : `${ex}`), ex);\n  }\n\n  if (handlers.onQueryError) {\n    enforceUndefined(handlers.onQueryError(query, q, err));\n  }\n\n  throw err;\n}\n\nfunction parseMySqlError(ex, queryText) {\n  if (isMySqlError(ex)) {\n    const match = / near \\'((?:.|\\n)+)\\' at line (\\d+)$/.exec(ex.sqlMessage);\n\n    if (match) {\n      const index = queryText.indexOf(match[1]);\n\n      if (index === queryText.lastIndexOf(match[1])) {\n        const linesUptoStart = queryText.substr(0, index).split('\\n');\n        const line = linesUptoStart.length;\n        const start = {\n          line,\n          column: linesUptoStart[linesUptoStart.length - 1].length + 1\n        };\n        const linesUptoEnd = queryText.substr(0, index + match[1].length).split('\\n');\n        const end = {\n          line: linesUptoEnd.length,\n          column: linesUptoEnd[linesUptoEnd.length - 1].length + 1\n        };\n        return {\n          start,\n          end,\n          message: ex.message\n        };\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction isError(ex) {\n  return typeof ex === 'object' && ex !== null && 'message' in ex && typeof ex.message === 'string';\n}\n\nfunction isMySqlError(ex) {\n  return typeof ex === 'object' && ex !== null && ex.code === 'ER_PARSE_ERROR' && ex.sqlState === '42000' && typeof ex.sqlMessage === 'string' && typeof ex.message === 'string';\n}\n\nfunction enforceUndefined(value) {\n  if (value !== undefined) {\n    throw new Error(`Your event handlers must return \"undefined\". This is to allow for the possibility of event handlers being used as hooks with more advanced functionality in the future.`);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","escape_identifier_1","require","sql_1","push_to_async_iterable_1","codeFrameColumns","mysqlFormat","escapeIdentifier","str","escapeMySqlIdentifier","formatValue","placeholder","MySqlDriver","constructor","client","handlers","acquireLockTimeoutMilliseconds","_endCalled","_onIdleError","err","removeListener","_removeFromPool","_idleErrorEventHandler","_handlers","onAddingToPool","removeFromPool","idleErrorEventHandler","onActive","onIdle","on","dispose","destroy","canRecycleConnectionAfterError","_err","_a","_b","_c","timeout","result","Promise","race","query","r","setTimeout","undefined","clearTimeout","rows","ex","beginTransaction","options","parameters","readOnly","push","withConsistentSnapshot","length","execute","join","commitTransaction","rollbackTransaction","shouldRetryTransactionFailure","_transactionOptions","_ex","_failureCount","createSavepoint","savepointName","releaseSavepoint","rollbackToSavepoint","_executeQuery","q","format","onQueryStart","enforceUndefined","results","executeQueryInternal","onQueryResults","executeAndReturnAll","queries","Array","i","executeAndReturnLast","queryStream","isSqlQuery","Error","text","values","highWaterMark","connection","default","stream","onData","onError","onEnd","resume","pause","queryNodeStream","assign","event","cb","call","handleError","message","mySqlError","parseMySqlError","start","end","oldMessage","replace","isError","onQueryError","queryText","isMySqlError","match","exec","sqlMessage","index","indexOf","lastIndexOf","linesUptoStart","substr","split","line","column","linesUptoEnd","code","sqlState"],"sources":["D:/angular/pr1/node_modules/@databases/mysql/lib/MySqlDriver.js"],"sourcesContent":["\"use strict\";\n/* tslint:disable:no-void-expression */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst escape_identifier_1 = require(\"@databases/escape-identifier\");\nconst sql_1 = require(\"@databases/sql\");\nconst push_to_async_iterable_1 = require(\"@databases/push-to-async-iterable\");\nconst { codeFrameColumns } = require('@babel/code-frame');\nconst mysqlFormat = {\n    escapeIdentifier: (str) => (0, escape_identifier_1.escapeMySqlIdentifier)(str),\n    formatValue: (value) => ({ placeholder: '?', value }),\n};\nclass MySqlDriver {\n    constructor(client, handlers, acquireLockTimeoutMilliseconds) {\n        this._endCalled = false;\n        this._onIdleError = (err) => {\n            if (this._endCalled) {\n                return;\n            }\n            this.client.removeListener('error', this._onIdleError);\n            if (this._removeFromPool) {\n                this._removeFromPool();\n            }\n            if (this._idleErrorEventHandler) {\n                this._idleErrorEventHandler(err);\n            }\n        };\n        this.acquireLockTimeoutMilliseconds = acquireLockTimeoutMilliseconds;\n        this.client = client;\n        this._handlers = handlers;\n    }\n    onAddingToPool(removeFromPool, idleErrorEventHandler) {\n        this._removeFromPool = removeFromPool;\n        this._idleErrorEventHandler = idleErrorEventHandler;\n    }\n    onActive() {\n        this.client.removeListener('error', this._onIdleError);\n    }\n    onIdle() {\n        this.client.on('error', this._onIdleError);\n    }\n    async dispose() {\n        if (!this._endCalled) {\n            this._endCalled = true;\n            this.client.on('error', this._onIdleError);\n            this.client.destroy();\n        }\n    }\n    async canRecycleConnectionAfterError(_err) {\n        var _a, _b, _c;\n        try {\n            let timeout;\n            const result = await Promise.race([\n                this.client.query('BEGIN TRANSACTION READ ONLY;SELECT 1 AS result;COMMIT;'),\n                new Promise((r) => {\n                    timeout = setTimeout(r, 100);\n                }),\n            ]);\n            if (timeout !== undefined) {\n                clearTimeout(timeout);\n            }\n            return ((_c = (_b = (_a = result === null || result === void 0 ? void 0 : result[1]) === null || _a === void 0 ? void 0 : _a.rows) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.result) === 1;\n        }\n        catch (ex) {\n            return false;\n        }\n    }\n    async beginTransaction(options) {\n        const parameters = [];\n        if (options) {\n            if (options.readOnly) {\n                parameters.push('READ ONLY');\n            }\n            else if (options.readOnly === false) {\n                parameters.push('READ WRITE');\n            }\n            if (options.withConsistentSnapshot) {\n                parameters.push('WITH CONSISTENT SNAPSHOT');\n            }\n        }\n        if (parameters.length) {\n            await execute(this.client, `START TRANSACTION ${parameters.join(', ')}`);\n        }\n        else {\n            await execute(this.client, `BEGIN`);\n        }\n    }\n    async commitTransaction() {\n        await execute(this.client, `COMMIT`);\n    }\n    async rollbackTransaction() {\n        await execute(this.client, `ROLLBACK`);\n    }\n    async shouldRetryTransactionFailure(_transactionOptions, _ex, _failureCount) {\n        return false;\n    }\n    async createSavepoint(savepointName) {\n        await execute(this.client, `SAVEPOINT ${savepointName}`);\n    }\n    async releaseSavepoint(savepointName) {\n        await execute(this.client, `RELEASE SAVEPOINT ${savepointName}`);\n    }\n    async rollbackToSavepoint(savepointName) {\n        await execute(this.client, `ROLLBACK TO SAVEPOINT ${savepointName}`);\n    }\n    async _executeQuery(query) {\n        const q = query.format(mysqlFormat);\n        if (this._handlers.onQueryStart) {\n            enforceUndefined(this._handlers.onQueryStart(query, q));\n        }\n        const results = await executeQueryInternal(this.client, query, q, this._handlers);\n        if (this._handlers.onQueryResults) {\n            enforceUndefined(this._handlers.onQueryResults(query, q, results));\n        }\n        return results;\n    }\n    async executeAndReturnAll(queries) {\n        const results = new Array(queries.length);\n        for (let i = 0; i < queries.length; i++) {\n            results[i] = await this._executeQuery(queries[i]);\n        }\n        return results;\n    }\n    async executeAndReturnLast(queries) {\n        if (queries.length === 0) {\n            return [];\n        }\n        for (let i = 0; i < queries.length - 1; i++) {\n            await this._executeQuery(queries[i]);\n        }\n        return await this._executeQuery(queries[queries.length - 1]);\n    }\n    queryStream(query, options) {\n        if (!(0, sql_1.isSqlQuery)(query)) {\n            throw new Error('Invalid query, you must use @databases/sql to create your queries.');\n        }\n        const { text, values } = query.format(mysqlFormat);\n        const highWaterMark = (options && options.highWaterMark) || 5;\n        const connection = this.client.connection;\n        return (0, push_to_async_iterable_1.default)((handlers) => {\n            const stream = connection.query(text, values);\n            stream.on('result', handlers.onData);\n            stream.on('error', handlers.onError);\n            stream.on('end', handlers.onEnd);\n            return {\n                dispose: () => {\n                    connection.resume();\n                },\n                pause: () => {\n                    connection.pause();\n                },\n                resume: () => {\n                    connection.resume();\n                },\n                highWaterMark,\n            };\n        });\n    }\n    queryNodeStream(query, options) {\n        if (!(0, sql_1.isSqlQuery)(query)) {\n            throw new Error('Invalid query, you must use @databases/sql to create your queries.');\n        }\n        const { text, values } = query.format(mysqlFormat);\n        const connection = this.client.connection;\n        const result = connection.query(text, values).stream(options);\n        // tslint:disable-next-line:no-unbound-method\n        const on = result.on;\n        const handlers = this._handlers;\n        return Object.assign(result, {\n            on(event, cb) {\n                if (event !== 'error')\n                    return on.call(this, event, cb);\n                return on.call(this, event, (ex) => {\n                    // TODO: consider using https://github.com/Vincit/db-errors\n                    try {\n                        handleError(ex, query, { text, values }, handlers);\n                    }\n                    catch (ex) {\n                        cb(ex);\n                    }\n                });\n            },\n        });\n    }\n}\nexports.default = MySqlDriver;\nasync function execute(client, query) {\n    try {\n        await client.query(query);\n    }\n    catch (ex) {\n        throw Object.assign(new Error(ex.message), ex);\n    }\n}\nasync function executeQueryInternal(client, query, q, handlers) {\n    try {\n        // const result: [RowDataPacket[] | RowDataPacket[][] | OkPacket | OkPacket[] | ResultSetHeader, FieldPacket[]]\n        const [result] = await client.query(q.text, q.values);\n        return result;\n    }\n    catch (ex) {\n        handleError(ex, query, q, handlers);\n    }\n}\nfunction handleError(ex, query, q, handlers) {\n    let err;\n    const mySqlError = parseMySqlError(ex, q.text);\n    if (mySqlError) {\n        const { start, end, message: oldMessage } = mySqlError;\n        const message = oldMessage.replace(/ near \\'((?:.|\\n)+)\\' at line (\\d+)$/, ` near:\\n\\n${codeFrameColumns(q.text, { start, end })}\\n`);\n        err = Object.assign(new Error(message), ex, { message });\n    }\n    else {\n        err = Object.assign(new Error(isError(ex) ? ex.message : `${ex}`), ex);\n    }\n    if (handlers.onQueryError) {\n        enforceUndefined(handlers.onQueryError(query, q, err));\n    }\n    throw err;\n}\nfunction parseMySqlError(ex, queryText) {\n    if (isMySqlError(ex)) {\n        const match = / near \\'((?:.|\\n)+)\\' at line (\\d+)$/.exec(ex.sqlMessage);\n        if (match) {\n            const index = queryText.indexOf(match[1]);\n            if (index === queryText.lastIndexOf(match[1])) {\n                const linesUptoStart = queryText.substr(0, index).split('\\n');\n                const line = linesUptoStart.length;\n                const start = {\n                    line,\n                    column: linesUptoStart[linesUptoStart.length - 1].length + 1,\n                };\n                const linesUptoEnd = queryText\n                    .substr(0, index + match[1].length)\n                    .split('\\n');\n                const end = {\n                    line: linesUptoEnd.length,\n                    column: linesUptoEnd[linesUptoEnd.length - 1].length + 1,\n                };\n                return { start, end, message: ex.message };\n            }\n        }\n    }\n    return null;\n}\nfunction isError(ex) {\n    return (typeof ex === 'object' &&\n        ex !== null &&\n        'message' in ex &&\n        typeof ex.message === 'string');\n}\nfunction isMySqlError(ex) {\n    return (typeof ex === 'object' &&\n        ex !== null &&\n        ex.code === 'ER_PARSE_ERROR' &&\n        ex.sqlState === '42000' &&\n        typeof ex.sqlMessage === 'string' &&\n        typeof ex.message === 'string');\n}\nfunction enforceUndefined(value) {\n    if (value !== undefined) {\n        throw new Error(`Your event handlers must return \"undefined\". This is to allow for the possibility of event handlers being used as hooks with more advanced functionality in the future.`);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}