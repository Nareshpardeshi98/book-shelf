{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"D:/angular/pr1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _awaitAsyncGenerator = require(\"D:/angular/pr1/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\n\nvar _wrapAsyncGenerator = require(\"D:/angular/pr1/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\n\nvar _asyncIterator = require(\"D:/angular/pr1/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst split_sql_query_1 = require(\"@databases/split-sql-query\");\n\nconst cuid = require(\"cuid\");\n\nconst QueryableType_1 = require(\"./QueryableType\");\n\nconst lock_1 = require(\"@databases/lock\");\n\nconst utils_1 = require(\"./utils\");\n\nclass BaseTransaction {\n  constructor(driver, factories, parentContext) {\n    this.type = QueryableType_1.default.Transaction;\n    this._driver = driver;\n    this._factories = factories;\n    this._lock = (0, lock_1.createLock)(driver.acquireLockTimeoutMilliseconds);\n    this._parentContext = parentContext;\n  }\n\n  _throwIfDisposed() {\n    if (this._disposed) {\n      throw new Error('You cannot run any operations on a Transaction after it has been committed or rolled back.');\n    }\n  }\n\n  task(fn) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2._throwIfDisposed();\n\n      return yield fn(_this2);\n    })();\n  }\n\n  tx(fn) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3._throwIfDisposed();\n\n      yield _this3._lock.acquireLock();\n\n      try {\n        const savepointName = cuid();\n        yield _this3._driver.createSavepoint(savepointName);\n\n        const subTransaction = _this3._factories.createTransaction(_this3._driver, _this3._parentContext);\n\n        try {\n          const result = yield fn(subTransaction);\n          yield subTransaction.dispose();\n          yield _this3._driver.releaseSavepoint(savepointName);\n          return result;\n        } catch (ex) {\n          yield subTransaction.dispose();\n          yield _this3._driver.rollbackToSavepoint(savepointName);\n          throw ex;\n        }\n      } finally {\n        _this3._lock.releaseLock();\n      }\n    })();\n  }\n\n  query(query) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      (0, utils_1.assertSql)(query);\n\n      _this4._throwIfDisposed();\n\n      yield _this4._lock.acquireLock();\n\n      try {\n        if (Array.isArray(query)) {\n          if (query.length === 0) return [];\n          return yield _this4._driver.executeAndReturnAll(query);\n        } else {\n          return yield _this4._driver.executeAndReturnLast((0, split_sql_query_1.default)(query));\n        }\n      } finally {\n        _this4._lock.releaseLock();\n      }\n    })();\n  }\n\n  addPostCommitStep(fn) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5._parentContext.addPostCommitStep(fn);\n    })();\n  }\n\n  queryStream(query, options) {\n    var _this = this;\n\n    return _wrapAsyncGenerator(function* () {\n      (0, utils_1.assertSql)(query);\n\n      _this._throwIfDisposed();\n\n      yield _awaitAsyncGenerator(_this._lock.acquireLock());\n\n      try {\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n\n        var _iteratorError;\n\n        try {\n          for (var _iterator = _asyncIterator(_this._driver.queryStream(query, options)), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n            const record = _step.value;\n            yield record;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              yield _awaitAsyncGenerator(_iterator.return());\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } finally {\n        _this._lock.releaseLock();\n      }\n    })();\n  }\n\n  dispose() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this6._disposed || (_this6._disposed = _this6._lock.pool());\n    })();\n  }\n\n}\n\nexports.default = BaseTransaction;","map":{"version":3,"names":["Object","defineProperty","exports","value","split_sql_query_1","require","cuid","QueryableType_1","lock_1","utils_1","BaseTransaction","constructor","driver","factories","parentContext","type","default","Transaction","_driver","_factories","_lock","createLock","acquireLockTimeoutMilliseconds","_parentContext","_throwIfDisposed","_disposed","Error","task","fn","tx","acquireLock","savepointName","createSavepoint","subTransaction","createTransaction","result","dispose","releaseSavepoint","ex","rollbackToSavepoint","releaseLock","query","assertSql","Array","isArray","length","executeAndReturnAll","executeAndReturnLast","addPostCommitStep","queryStream","options","record","pool"],"sources":["D:/angular/pr1/node_modules/@databases/shared/lib/BaseTransaction.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst split_sql_query_1 = require(\"@databases/split-sql-query\");\nconst cuid = require(\"cuid\");\nconst QueryableType_1 = require(\"./QueryableType\");\nconst lock_1 = require(\"@databases/lock\");\nconst utils_1 = require(\"./utils\");\nclass BaseTransaction {\n    constructor(driver, factories, parentContext) {\n        this.type = QueryableType_1.default.Transaction;\n        this._driver = driver;\n        this._factories = factories;\n        this._lock = (0, lock_1.createLock)(driver.acquireLockTimeoutMilliseconds);\n        this._parentContext = parentContext;\n    }\n    _throwIfDisposed() {\n        if (this._disposed) {\n            throw new Error('You cannot run any operations on a Transaction after it has been committed or rolled back.');\n        }\n    }\n    async task(fn) {\n        this._throwIfDisposed();\n        return await fn(this);\n    }\n    async tx(fn) {\n        this._throwIfDisposed();\n        await this._lock.acquireLock();\n        try {\n            const savepointName = cuid();\n            await this._driver.createSavepoint(savepointName);\n            const subTransaction = this._factories.createTransaction(this._driver, this._parentContext);\n            try {\n                const result = await fn(subTransaction);\n                await subTransaction.dispose();\n                await this._driver.releaseSavepoint(savepointName);\n                return result;\n            }\n            catch (ex) {\n                await subTransaction.dispose();\n                await this._driver.rollbackToSavepoint(savepointName);\n                throw ex;\n            }\n        }\n        finally {\n            this._lock.releaseLock();\n        }\n    }\n    async query(query) {\n        (0, utils_1.assertSql)(query);\n        this._throwIfDisposed();\n        await this._lock.acquireLock();\n        try {\n            if (Array.isArray(query)) {\n                if (query.length === 0)\n                    return [];\n                return await this._driver.executeAndReturnAll(query);\n            }\n            else {\n                return await this._driver.executeAndReturnLast((0, split_sql_query_1.default)(query));\n            }\n        }\n        finally {\n            this._lock.releaseLock();\n        }\n    }\n    async addPostCommitStep(fn) {\n        this._parentContext.addPostCommitStep(fn);\n    }\n    async *queryStream(query, options) {\n        (0, utils_1.assertSql)(query);\n        this._throwIfDisposed();\n        await this._lock.acquireLock();\n        try {\n            for await (const record of this._driver.queryStream(query, options)) {\n                yield record;\n            }\n        }\n        finally {\n            this._lock.releaseLock();\n        }\n    }\n    async dispose() {\n        return this._disposed || (this._disposed = this._lock.pool());\n    }\n}\nexports.default = BaseTransaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}