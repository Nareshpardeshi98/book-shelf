{"ast":null,"code":"\"use strict\"; // See https://gist.github.com/ForbesLindesay/cb5d6ea7720ee8912109dd2cca787590 for justification of design\n\nvar _asyncToGenerator = require(\"D:/angular/pr1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncQueue = void 0;\n\nclass Queue {\n  constructor() {\n    this._head = [];\n    this._tail = [];\n  }\n  /**\n   * Push an item onto the end of the queue\n   */\n\n\n  push(value) {\n    this._tail.push(value);\n  }\n  /**\n   * Take an item off the start of the queue\n   */\n\n\n  shift() {\n    if (this._head.length !== 0) {\n      return this._head.pop();\n    }\n\n    if (this._tail.length === 1) {\n      return this._tail.pop();\n    }\n\n    if (this._tail.length > 1) {\n      [this._head, this._tail] = [this._tail.reverse(), this._head];\n      return this._head.pop();\n    }\n\n    return undefined;\n  }\n  /**\n   * Look at an item off the start of the queue without removing it\n   */\n\n\n  peek() {\n    if (this._head.length !== 0) {\n      return this._head[this._head.length - 1];\n    }\n\n    if (this._tail.length !== 0) {\n      return this._tail[0];\n    }\n\n    return undefined;\n  }\n  /**\n   * Get the total number of items in the queue\n   */\n\n\n  getLength() {\n    return this._head.length + this._tail.length;\n  }\n  /**\n   * Remove (and return) all items from the queue\n   */\n\n\n  clear() {\n    const removed = this._head.reverse().concat(this._tail);\n\n    this._head = [];\n    this._tail = [];\n    return removed;\n  }\n\n}\n\nexports.default = Queue;\n\nclass AsyncQueue {\n  constructor() {\n    this._items = new Queue();\n    this._waiting = new Queue();\n  }\n  /**\n   * Push an item onto the end of the queue\n   */\n\n\n  push(value) {\n    const waiting = this._waiting.shift();\n\n    if (waiting) {\n      waiting(value);\n    } else {\n      this._items.push(value);\n    }\n  }\n  /**\n   * Get the next item from the start queue, waiting until one\n   * is added if the queue is currently empty\n   */\n\n\n  shift() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const item = _this._items.shift();\n\n      if (item) {\n        return item;\n      } else {\n        return new Promise(resolve => {\n          _this._waiting.push(resolve);\n        });\n      }\n    })();\n  }\n  /**\n   * Get the number of items currently in the queue\n   *\n   * N.B. this can be negative if `.shift()` has been called more times than `.push()`\n   */\n\n\n  getLength() {\n    return this._items.getLength() - this._waiting.getLength();\n  }\n\n}\n\nexports.AsyncQueue = AsyncQueue;\nmodule.exports = Object.assign(Queue, {\n  default: Queue,\n  AsyncQueue: AsyncQueue\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","AsyncQueue","Queue","constructor","_head","_tail","push","shift","length","pop","reverse","undefined","peek","getLength","clear","removed","concat","default","_items","_waiting","waiting","item","Promise","resolve","module","assign"],"sources":["D:/angular/pr1/node_modules/@databases/queue/lib/index.js"],"sourcesContent":["\"use strict\";\n// See https://gist.github.com/ForbesLindesay/cb5d6ea7720ee8912109dd2cca787590 for justification of design\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncQueue = void 0;\nclass Queue {\n    constructor() {\n        this._head = [];\n        this._tail = [];\n    }\n    /**\n     * Push an item onto the end of the queue\n     */\n    push(value) {\n        this._tail.push(value);\n    }\n    /**\n     * Take an item off the start of the queue\n     */\n    shift() {\n        if (this._head.length !== 0) {\n            return this._head.pop();\n        }\n        if (this._tail.length === 1) {\n            return this._tail.pop();\n        }\n        if (this._tail.length > 1) {\n            [this._head, this._tail] = [this._tail.reverse(), this._head];\n            return this._head.pop();\n        }\n        return undefined;\n    }\n    /**\n     * Look at an item off the start of the queue without removing it\n     */\n    peek() {\n        if (this._head.length !== 0) {\n            return this._head[this._head.length - 1];\n        }\n        if (this._tail.length !== 0) {\n            return this._tail[0];\n        }\n        return undefined;\n    }\n    /**\n     * Get the total number of items in the queue\n     */\n    getLength() {\n        return this._head.length + this._tail.length;\n    }\n    /**\n     * Remove (and return) all items from the queue\n     */\n    clear() {\n        const removed = this._head.reverse().concat(this._tail);\n        this._head = [];\n        this._tail = [];\n        return removed;\n    }\n}\nexports.default = Queue;\nclass AsyncQueue {\n    constructor() {\n        this._items = new Queue();\n        this._waiting = new Queue();\n    }\n    /**\n     * Push an item onto the end of the queue\n     */\n    push(value) {\n        const waiting = this._waiting.shift();\n        if (waiting) {\n            waiting(value);\n        }\n        else {\n            this._items.push(value);\n        }\n    }\n    /**\n     * Get the next item from the start queue, waiting until one\n     * is added if the queue is currently empty\n     */\n    async shift() {\n        const item = this._items.shift();\n        if (item) {\n            return item;\n        }\n        else {\n            return new Promise((resolve) => {\n                this._waiting.push(resolve);\n            });\n        }\n    }\n    /**\n     * Get the number of items currently in the queue\n     *\n     * N.B. this can be negative if `.shift()` has been called more times than `.push()`\n     */\n    getLength() {\n        return this._items.getLength() - this._waiting.getLength();\n    }\n}\nexports.AsyncQueue = AsyncQueue;\nmodule.exports = Object.assign(Queue, {\n    default: Queue,\n    AsyncQueue: AsyncQueue,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}