{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Replace any un-matched surrogate pairs with \\uFFFD so that\n * the string is guaranteed to be a valid utf8 string.\n */\n\nfunction removeInvalidUnicode(str) {\n  return str.replace(/[\\uD800-\\uDFFF]/g, (chr, pos) => {\n    if (chr.charCodeAt(0) <= 0xdbff) {\n      return pos < str.length && str.charCodeAt(pos + 1) >= 0xdc00 && str.charCodeAt(pos + 1) <= 0xdfff ? chr : '\\uFFFD';\n    } else {\n      return pos > 0 && str.charCodeAt(pos - 1) >= 0xd800 && str.charCodeAt(pos - 1) <= 0xdbff ? chr : '\\uFFFD';\n    }\n  });\n}\n\nexports.removeInvalidUnicode = removeInvalidUnicode;\n/**\n * Return true if there are no un-matched surrogate pairs, otherwise\n * return false.\n */\n\nfunction isValidUnicode(str) {\n  if (typeof str !== 'string') return false;\n  const pattern = /[\\uD800-\\uDFFF]/g;\n  let match; // tslint:disable-next-line:no-conditional-assignment\n\n  while (match = pattern.exec(str)) {\n    const pos = match.index;\n\n    if (str.charCodeAt(pos) <= 0xdbff) {\n      if (pos === str.length - 1 || str.charCodeAt(pos + 1) < 0xdc00 || str.charCodeAt(pos + 1) > 0xdfff) {\n        return false;\n      }\n    } else {\n      if (pos === 0 || str.charCodeAt(pos - 1) < 0xd800 || str.charCodeAt(pos - 1) > 0xdbff) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexports.isValidUnicode = isValidUnicode;\n/**\n * Throw an error if the string has unmatched surrogate pairs\n */\n\nfunction assertValidUnicode(str) {\n  if (!isValidUnicode(str)) {\n    throw new Error(`This string contains unmatched surrogate pairs: ${JSON.stringify(str)}`);\n  }\n\n  return str;\n}\n\nexports.default = assertValidUnicode;","map":{"version":3,"names":["Object","defineProperty","exports","value","removeInvalidUnicode","str","replace","chr","pos","charCodeAt","length","isValidUnicode","pattern","match","exec","index","assertValidUnicode","Error","JSON","stringify","default"],"sources":["D:/angular/pr1/node_modules/@databases/validate-unicode/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Replace any un-matched surrogate pairs with \\uFFFD so that\n * the string is guaranteed to be a valid utf8 string.\n */\n\nfunction removeInvalidUnicode(str) {\n  return str.replace(/[\\uD800-\\uDFFF]/g, (chr, pos) => {\n    if (chr.charCodeAt(0) <= 0xdbff) {\n      return pos < str.length && str.charCodeAt(pos + 1) >= 0xdc00 && str.charCodeAt(pos + 1) <= 0xdfff ? chr : '\\uFFFD';\n    } else {\n      return pos > 0 && str.charCodeAt(pos - 1) >= 0xd800 && str.charCodeAt(pos - 1) <= 0xdbff ? chr : '\\uFFFD';\n    }\n  });\n}\n\nexports.removeInvalidUnicode = removeInvalidUnicode;\n/**\n * Return true if there are no un-matched surrogate pairs, otherwise\n * return false.\n */\n\nfunction isValidUnicode(str) {\n  if (typeof str !== 'string') return false;\n  const pattern = /[\\uD800-\\uDFFF]/g;\n  let match; // tslint:disable-next-line:no-conditional-assignment\n\n  while (match = pattern.exec(str)) {\n    const pos = match.index;\n\n    if (str.charCodeAt(pos) <= 0xdbff) {\n      if (pos === str.length - 1 || str.charCodeAt(pos + 1) < 0xdc00 || str.charCodeAt(pos + 1) > 0xdfff) {\n        return false;\n      }\n    } else {\n      if (pos === 0 || str.charCodeAt(pos - 1) < 0xd800 || str.charCodeAt(pos - 1) > 0xdbff) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexports.isValidUnicode = isValidUnicode;\n/**\n * Throw an error if the string has unmatched surrogate pairs\n */\n\nfunction assertValidUnicode(str) {\n  if (!isValidUnicode(str)) {\n    throw new Error(`This string contains unmatched surrogate pairs: ${JSON.stringify(str)}`);\n  }\n\n  return str;\n}\n\nexports.default = assertValidUnicode;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGA;AACA;AACA;AACA;;AAEA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;EACjC,OAAOA,GAAG,CAACC,OAAJ,CAAY,kBAAZ,EAAgC,CAACC,GAAD,EAAMC,GAAN,KAAc;IACnD,IAAID,GAAG,CAACE,UAAJ,CAAe,CAAf,KAAqB,MAAzB,EAAiC;MAC/B,OAAOD,GAAG,GAAGH,GAAG,CAACK,MAAV,IAAoBL,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,KAA2B,MAA/C,IAAyDH,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,KAA2B,MAApF,GAA6FD,GAA7F,GAAmG,QAA1G;IACD,CAFD,MAEO;MACL,OAAOC,GAAG,GAAG,CAAN,IAAWH,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,KAA2B,MAAtC,IAAgDH,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,KAA2B,MAA3E,GAAoFD,GAApF,GAA0F,QAAjG;IACD;EACF,CANM,CAAP;AAOD;;AAEDL,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;AACA;AACA;AACA;AACA;;AAEA,SAASO,cAAT,CAAwBN,GAAxB,EAA6B;EAC3B,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAP;EAC7B,MAAMO,OAAO,GAAG,kBAAhB;EACA,IAAIC,KAAJ,CAH2B,CAGhB;;EAEX,OAAOA,KAAK,GAAGD,OAAO,CAACE,IAAR,CAAaT,GAAb,CAAf,EAAkC;IAChC,MAAMG,GAAG,GAAGK,KAAK,CAACE,KAAlB;;IAEA,IAAIV,GAAG,CAACI,UAAJ,CAAeD,GAAf,KAAuB,MAA3B,EAAmC;MACjC,IAAIA,GAAG,KAAKH,GAAG,CAACK,MAAJ,GAAa,CAArB,IAA0BL,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,IAA0B,MAApD,IAA8DH,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,IAA0B,MAA5F,EAAoG;QAClG,OAAO,KAAP;MACD;IACF,CAJD,MAIO;MACL,IAAIA,GAAG,KAAK,CAAR,IAAaH,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,IAA0B,MAAvC,IAAiDH,GAAG,CAACI,UAAJ,CAAeD,GAAG,GAAG,CAArB,IAA0B,MAA/E,EAAuF;QACrF,OAAO,KAAP;MACD;IACF;EACF;;EAED,OAAO,IAAP;AACD;;AAEDN,OAAO,CAACS,cAAR,GAAyBA,cAAzB;AACA;AACA;AACA;;AAEA,SAASK,kBAAT,CAA4BX,GAA5B,EAAiC;EAC/B,IAAI,CAACM,cAAc,CAACN,GAAD,CAAnB,EAA0B;IACxB,MAAM,IAAIY,KAAJ,CAAW,mDAAkDC,IAAI,CAACC,SAAL,CAAed,GAAf,CAAoB,EAAjF,CAAN;EACD;;EAED,OAAOA,GAAP;AACD;;AAEDH,OAAO,CAACkB,OAAR,GAAkBJ,kBAAlB"},"metadata":{},"sourceType":"script"}