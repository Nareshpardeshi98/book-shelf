{"ast":null,"code":"function isParsedValueRuntype(e) {\n  return \"tag\" in e && \"parsed\" === e.tag;\n}\n\nfunction ParsedValue(e, t) {\n  return assertRuntype(e), create(\"parsed\", {\n    p: (r, n, a) => ((e, t, r) => {\n      if (!e.success) return e;\n\n      if (!e.cycle) {\n        const n = t(e.value);\n        return n.success && r && innerGuard(r, n.value, createGuardVisitedState()) || n;\n      }\n\n      return innerMapValidationPlaceholder(Array.isArray(e.placeholder) ? [...e.placeholder] : { ...e.placeholder\n      }, () => e.unwrap(), t, r);\n    })(a(e, r), e => t.parse(e), t.test),\n\n    t(r, n) {\n      return t.test ? n(t.test, r) : failure((t.name || `ParsedValue<${show(e)}>`) + \" does not support Runtype.test\");\n    },\n\n    s(r, n, a) {\n      if (!t.serialize) return failure((t.name || `ParsedValue<${show(e)}>`) + \" does not support Runtype.serialize\");\n      const s = t.test ? innerGuard(t.test, r, createGuardVisitedState()) : void 0;\n      if (s) return s;\n      const o = t.serialize(r);\n      return o.success ? a(e, o.value) : o;\n    }\n\n  }, {\n    underlying: e,\n    config: t,\n\n    show() {\n      return t.name || `ParsedValue<${show(e, !1)}>`;\n    }\n\n  });\n}\n\nfunction assertRuntype(...e) {\n  for (const r of e) if (!r || !r[t]) throw new Error(\"Expected Runtype but got \" + showValue(r));\n}\n\nfunction create(e, r, n) {\n  function safeParse(e) {\n    return innerValidate(a, e, createVisitedState());\n  }\n\n  function safeSerialize(e) {\n    return innerSerialize(a, e, createVisitedState());\n  }\n\n  const a = { ...n,\n    tag: e,\n\n    assert(e) {\n      const t = innerGuard(a, e, createGuardVisitedState());\n      if (t) throw new ValidationError(t);\n    },\n\n    parse(e) {\n      const t = safeParse(e);\n      if (!t.success) throw new ValidationError(t);\n      return t.value;\n    },\n\n    safeParse,\n    test: e => void 0 === innerGuard(a, e, createGuardVisitedState()),\n\n    serialize(e) {\n      const t = safeSerialize(e);\n      if (!t.success) throw new ValidationError(t);\n      return t.value;\n    },\n\n    safeSerialize,\n    Or: e => Union(a, e),\n    And: e => Intersect(a, e),\n    withConstraint: (e, t) => Constraint(a, e, t),\n    withGuard: (e, t) => Constraint(a, e, t),\n    withBrand: e => Brand(e, a),\n    withParser: e => ParsedValue(a, e),\n    toString: () => `Runtype<${show(a)}>`,\n    [t]: \"function\" == typeof r ? {\n      p: r\n    } : r\n  };\n  return a;\n}\n\nfunction createValidationPlaceholder(e, t) {\n  return innerMapValidationPlaceholder(e, () => t(e) || success(e));\n}\n\nfunction innerMapValidationPlaceholder(e, t, r, n) {\n  let a,\n      s = !1;\n  const o = {\n    success: !0,\n    cycle: !0,\n    placeholder: e,\n\n    unwrap() {\n      if (a) return s = !0, a;\n      a = success(e);\n      const i = t(),\n            u = i.success && r ? r(i.value) : i;\n      if (!u.success) return a = u;\n\n      if (s) {\n        const e = ((e, t) => e === t ? success(t) : Array.isArray(e) && Array.isArray(t) ? (e.splice(0, e.length, ...t), success(e)) : e && \"object\" == typeof e && !Array.isArray(e) && t && \"object\" == typeof t && !Array.isArray(t) ? (Object.assign(e, t), success(e)) : failure(`Cannot convert a value of type \"${Array.isArray(e) ? \"Array\" : typeof e}\" into a value of type \"${null === t ? \"null\" : Array.isArray(t) ? \"Array\" : typeof t}\" when it contains cycles.`))(a.value, u.value),\n              t = e.success && n && innerGuard(n, e.value, createGuardVisitedState());\n\n        a = t || e;\n      } else {\n        const e = n && innerGuard(n, u.value, createGuardVisitedState());\n        a = e || u;\n      }\n\n      return a.success && (o.placeholder = a.value), a;\n    }\n\n  };\n  return o;\n}\n\nfunction createVisitedState() {\n  return new Map();\n}\n\nfunction createGuardVisitedState() {\n  return new Map();\n}\n\nfunction innerValidate(e, t, r) {\n  const n = innerValidateToPlaceholder(e, t, r);\n  return n.cycle ? n.unwrap() : n;\n}\n\nfunction innerValidateToPlaceholder(e, r, n) {\n  var a;\n  const s = n,\n        o = e[t],\n        i = null === (a = s.get(e)) || void 0 === a ? void 0 : a.get(r);\n  if (void 0 !== i) return i;\n  const u = o.p(r, (e, t) => innerValidate(e, t, n), (e, t) => innerValidateToPlaceholder(e, t, n));\n  return u.cycle ? (s.set(e, (s.get(e) || new Map()).set(r, u)), u) : u;\n}\n\nfunction innerSerialize(e, t, r) {\n  const n = innerSerializeToPlaceholder(e, t, r);\n  return n.cycle ? n.unwrap() : n;\n}\n\nfunction innerSerializeToPlaceholder(e, r, n) {\n  var a;\n  const s = n,\n        o = e[t],\n        i = null === (a = s.get(e)) || void 0 === a ? void 0 : a.get(r);\n  if (void 0 !== i) return i;\n  let u = (o.s || o.p)(r, (e, t) => innerSerialize(e, t, n), (e, t) => innerSerializeToPlaceholder(e, t, n));\n  return u.cycle ? (s.set(e, (s.get(e) || new Map()).set(r, u)), u) : u;\n}\n\nfunction innerGuard(e, r, n) {\n  var a;\n  const s = n,\n        o = e[t];\n\n  if (r && (\"object\" == typeof r || \"function\" == typeof r)) {\n    if (null === (a = s.get(e)) || void 0 === a ? void 0 : a.has(r)) return;\n    s.set(e, (s.get(e) || new Set()).add(r));\n  }\n\n  if (o.t) return o.t(r, (e, t) => innerGuard(e, t, n));\n  let i = o.p(r, (e, t) => innerGuard(e, t, n) || success(t), (e, t) => innerGuard(e, t, n) || success(t));\n  return i.cycle && (i = i.unwrap()), i.success ? void 0 : i;\n}\n\nfunction showValue(e, r = 3, n = 30) {\n  switch (typeof e) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n      return \"\" + e;\n\n    case \"string\":\n      return JSON.stringify(e);\n\n    case \"object\":\n      if (null === e) return \"null\";\n\n      if (Array.isArray(e)) {\n        if (0 === r || 0 === n) return \"[Array]\";\n        {\n          let t = \"[\",\n              a = 0;\n\n          for (a = 0; a < e.length && n > t.length; a++) 0 !== a && (t += \", \"), t += showValue(e[a], r - 1, n - t.length);\n\n          return a < e.length && (t += \" ... \"), t += \"]\", t;\n        }\n      }\n\n      if ((e => \"object\" == typeof e && null != e && t in e)(e)) return e.toString();\n      if (0 === r) return \"{Object}\";\n      {\n        const t = Object.entries(e);\n        let a = \"{\",\n            s = 0;\n\n        for (s = 0; s < t.length && n > a.length; s++) {\n          0 !== s && (a += \", \");\n          const [e, o] = t[s];\n          a += `${/\\s/.test(e) ? JSON.stringify(e) : e}: ${showValue(o, r - 1, n - a.length)}`;\n        }\n\n        return s < t.length && (a += \" ... \"), a += \"}\", a;\n      }\n\n    case \"function\":\n    case \"symbol\":\n    case \"undefined\":\n    default:\n      return typeof e;\n  }\n}\n\nfunction success(e) {\n  return {\n    success: !0,\n    value: e\n  };\n}\n\nfunction failure(e, t = {}) {\n  return {\n    success: !1,\n    message: e,\n    ...t\n  };\n}\n\nfunction expected(e, t, r = {}) {\n  return failure(`Expected ${\"string\" == typeof e ? e : show(e)}, but was ${showValue(t)}`, r);\n}\n\nfunction unableToAssign(e, t, ...r) {\n  return [`Unable to assign ${showValue(e)} to ${\"string\" == typeof t ? t : show(t)}`, ...r.map(toFullError)];\n}\n\nfunction andError([e, ...t]) {\n  return [`And ${e[0].toLocaleLowerCase()}${e.substr(1)}`, ...t];\n}\n\nfunction typesAreNotCompatible(e, ...t) {\n  return [`The types of ${e} are not compatible`, ...t.map(toFullError)];\n}\n\nfunction toFullError(e) {\n  return \"string\" == typeof e ? [e] : Array.isArray(e) ? e : toFullError(e.fullError || e.message);\n}\n\nfunction showError(e) {\n  return e.fullError ? showFullError(e.fullError) : e.key ? `${e.message} in ${e.key}` : e.message;\n}\n\nfunction showFullError([e, ...t], r = \"\") {\n  return [`${r}${e}`, ...t.map(e => showFullError(e, r + \"  \"))].join(\"\\n\");\n}\n\nfunction AsyncContract(e, t) {\n  return {\n    enforce: r => (...n) => {\n      if (n.length < e.length) return Promise.reject(new ValidationError({\n        message: `Expected ${e.length} arguments but only received ${n.length}`\n      }));\n      const a = createVisitedState();\n\n      for (let t = 0; t < e.length; t++) {\n        const r = innerValidate(e[t], n[t], a);\n        if (!r.success) return Promise.reject(new ValidationError(r));\n        n[t] = r.value;\n      }\n\n      const s = r(...n);\n      return s instanceof Promise ? s.then(e => {\n        const r = innerGuard(t, e, createGuardVisitedState());\n        if (r) throw new ValidationError(r);\n        return e;\n      }) : Promise.reject(new ValidationError({\n        message: \"Expected function to return a promise, but instead got \" + s\n      }));\n    }\n  };\n}\n\nfunction Contract(e, t) {\n  return {\n    enforce: r => (...n) => {\n      if (n.length < e.length) throw new ValidationError({\n        message: `Expected ${e.length} arguments but only received ${n.length}`\n      });\n      const a = createVisitedState();\n\n      for (let t = 0; t < e.length; t++) {\n        const r = innerValidate(e[t], n[t], a);\n        if (!r.success) throw new ValidationError(r);\n        n[t] = r.value;\n      }\n\n      const s = r(...n),\n            o = innerGuard(t, s, createGuardVisitedState());\n      if (o) throw new ValidationError(o);\n      return s;\n    }\n  };\n}\n\nfunction assertType(e, t) {\n  e.assert(t);\n}\n\nfunction InternalArr(e, t) {\n  assertRuntype(e);\n  const r = create(\"array\", (t, n) => Array.isArray(t) ? createValidationPlaceholder([...t], a => {\n    let s,\n        o = void 0;\n\n    for (let i = 0; i < t.length; i++) {\n      const u = n(e, t[i]);\n      u.success ? a[i] = u.value : (o || (o = unableToAssign(t, r)), o.push(typesAreNotCompatible(`[${i}]`, u)), s = s || failure(u.message, {\n        key: u.key ? `[${i}].${u.key}` : `[${i}]`,\n        fullError: o\n      }));\n    }\n\n    return s;\n  }) : expected(\"an Array\", t), {\n    isReadonly: t,\n    element: e,\n\n    show() {\n      return `${t ? \"readonly \" : \"\"}${show(e, !0)}[]`;\n    }\n\n  });\n  return t || (r.asReadonly = () => InternalArr(e, !0)), r;\n}\n\nfunction Arr(e) {\n  return InternalArr(e, !1);\n}\n\nfunction ReadonlyArray(e) {\n  return InternalArr(e, !0);\n}\n\nfunction Constraint(e, t, r) {\n  assertRuntype(e);\n  const n = create(\"constraint\", (a, s) => {\n    const o = r && r.name,\n          i = s(e, a);\n    if (!i.success) return i;\n    const u = t(i.value);\n\n    if (!u || \"string\" == typeof u) {\n      const e = \"string\" == typeof u ? u : `${showValue(a)} failed ${o || \"constraint\"} check`;\n      return failure(e, {\n        fullError: unableToAssign(a, n, e)\n      });\n    }\n\n    return success(i.value);\n  }, {\n    underlying: e,\n    constraint: t,\n    name: r && r.name,\n    args: r && r.args,\n\n    show(t) {\n      return r && r.name || `WithConstraint<${show(e, t)}>`;\n    }\n\n  });\n  return n;\n}\n\nfunction Enum(e, t) {\n  const r = Object.values(t),\n        n = new Set(r.some(e => \"number\" == typeof e) ? r.filter(e => \"number\" == typeof e) : r);\n  return create(\"enum\", t => n.has(t) ? success(t) : expected(e, t), {\n    enumObject: t,\n    show: () => e\n  });\n}\n\nfunction InstanceOf(e) {\n  return create(\"instanceof\", t => t instanceof e ? success(t) : expected(\"\" + e.name, t), {\n    ctor: e,\n\n    show() {\n      return `InstanceOf<${e.name}>`;\n    }\n\n  });\n}\n\nfunction Intersect(...e) {\n  return assertRuntype(...e), create(\"intersect\", (t, r) => {\n    if (Array.isArray(t)) return createValidationPlaceholder([...t], t => {\n      for (const n of e) {\n        let e = r(n, t);\n        if (!e.success) return e;\n        if (!Array.isArray(e.value)) return failure(`The validator ${show(n)} attempted to convert the type of this value from an array to something else. That conversion is not valid as the child of an intersect`);\n        t.splice(0, t.length, ...e.value);\n      }\n    });\n    if (t && \"object\" == typeof t) return createValidationPlaceholder(Object.create(null), n => {\n      for (const a of e) {\n        let e = r(a, t);\n        if (!e.success) return e;\n        if (!e.value || \"object\" != typeof e.value) return failure(`The validator ${show(a)} attempted to convert the type of this value from an object to something else. That conversion is not valid as the child of an intersect`);\n        Object.assign(n, e.value);\n      }\n    });\n    let n = t;\n\n    for (const t of e) {\n      let e = r(t, n);\n      if (!e.success) return e;\n      n = e.value;\n    }\n\n    return success(n);\n  }, {\n    intersectees: e,\n\n    show(t) {\n      return parenthesize(\"\" + e.map(e => show(e, !0)).join(\" & \"), t);\n    }\n\n  });\n}\n\nfunction KeyOf(e) {\n  const t = new Set(Object.keys(e)),\n        r = [...t].sort().map(e => showValue(e)).join(\" | \");\n  return create(\"keyOf\", e => t.has(\"number\" == typeof e ? e.toString() : e) ? success(e) : expected(r, e), {\n    keys: t,\n    show: e => parenthesize(r, e)\n  });\n}\n\nfunction lazyValue(e) {\n  let t;\n  return () => t || (t = e());\n}\n\nfunction Lazy(e) {\n  const t = lazyValue(e);\n  return create(\"lazy\", (e, r, n) => n(t(), e), {\n    underlying: t,\n\n    show(e) {\n      return show(t(), e);\n    }\n\n  });\n}\n\nfunction Literal(e) {\n  return create(\"literal\", t => t === e ? success(t) : failure(`Expected literal ${showValue(e)}, but was ${showValue(t)}${typeof t != typeof e ? ` (i.e. a ${typeof t})` : \"\"}`), {\n    value: e,\n\n    show() {\n      return showValue(e);\n    }\n\n  });\n}\n\nfunction Named(e, t) {\n  return assertRuntype(t), create(\"named\", (e, r) => r(t, e), {\n    underlying: t,\n    name: e,\n\n    show() {\n      return e;\n    }\n\n  });\n}\n\nfunction hasKey(e, t) {\n  return \"object\" == typeof t && e in t;\n}\n\nfunction InternalObject(e, t, r) {\n  assertRuntype(...Object.values(e));\n  const n = create(\"object\", (r, a) => null == r || \"object\" != typeof r ? expected(n, r) : Array.isArray(r) ? failure(`Expected ${show(n)}, but was an Array`) : createValidationPlaceholder(Object.create(null), s => {\n    let o,\n        i = void 0;\n\n    for (const u in e) if (!t || hasKey(u, r) && void 0 !== r[u]) {\n      const c = t || hasKey(u, r) ? r[u] : void 0;\n      let l = a(e[u], c);\n      l.success ? s[u] = l.value : (i || (i = unableToAssign(r, n)), i.push(typesAreNotCompatible(`\"${u}\"`, l)), o = o || failure(l.message, {\n        key: l.key ? `${u}.${l.key}` : u,\n        fullError: i\n      }));\n    }\n\n    return o;\n  }), {\n    isPartial: t,\n    isReadonly: r,\n    fields: e,\n    asPartial: () => InternalObject(n.fields, !0, n.isReadonly),\n    asReadonly: () => InternalObject(n.fields, n.isPartial, !0),\n\n    pick(...n) {\n      const a = {};\n\n      for (const t of n) a[t] = e[t];\n\n      return InternalObject(a, t, r);\n    },\n\n    omit(...n) {\n      const a = { ...e\n      };\n\n      for (const e of n) e in a && delete a[e];\n\n      return InternalObject(a, t, r);\n    },\n\n    show() {\n      const n = Object.keys(e);\n      return n.length ? `{ ${n.map(n => `${r ? \"readonly \" : \"\"}${n}${t ? \"?\" : \"\"}: ${show(e[n], !1)};`).join(\" \")} }` : \"{}\";\n    }\n\n  });\n  return n;\n}\n\nfunction Obj(e) {\n  return InternalObject(e, !1, !1);\n}\n\nfunction Partial(e) {\n  return InternalObject(e, !0, !1);\n}\n\nfunction createPrimative(e) {\n  return create(e, t => typeof t === e ? success(t) : failure(`Expected ${e}, but was ${(e => `${showValue(e)}${\"string\" == typeof e ? \" (i.e. a string literal)\" : \"\"}`)(t)}`), {});\n}\n\nfunction Readonly(e) {\n  const t = { ...e\n  };\n  t.isReadonly = !0;\n\n  for (const r of [\"asPartial\", \"pick\", \"omit\"]) \"function\" == typeof e[r] && (t[r] = (...t) => Readonly(e[r](...t)));\n\n  return t;\n}\n\nfunction getExpectedBaseType(e) {\n  switch (e.tag) {\n    case \"string\":\n      return \"string\";\n\n    case \"number\":\n      return \"number\";\n\n    case \"literal\":\n      return typeof e.value;\n\n    case \"union\":\n      const t = e.alternatives.map(getExpectedBaseType);\n      return t.reduce((e, t) => e === t ? e : \"mixed\", t[0]);\n\n    case \"constraint\":\n      return getExpectedBaseType(e.underlying);\n  }\n}\n\nfunction Record(e, t) {\n  assertRuntype(e, t);\n  const r = lazyValue(() => getExpectedBaseType(e)),\n        n = create(\"record\", (a, s) => null == a || \"object\" != typeof a ? expected(n, a) : Object.getPrototypeOf(a) !== Object.prototype && null !== Object.getPrototypeOf(a) ? Array.isArray(a) ? failure(\"Expected Record, but was Array\") : failure(`Expected ${show(n)}, but was ${Object.getPrototypeOf(a)}`) : createValidationPlaceholder(Object.create(null), n => {\n    for (const o in a) {\n      let i = null;\n\n      if (\"number\" === r()) {\n        if (isNaN(+o)) return expected(\"record key to be a number\", o);\n        i = s(e, +o);\n      } else \"string\" === r() ? i = s(e, o) : (i = s(e, o), i.success || isNaN(+o) || (i = s(e, +o)));\n\n      if (!i.success) return expected(\"record key to be \" + show(e), o);\n      const u = s(t, a[o]);\n      if (!u.success) return failure(u.message, {\n        key: u.key ? `${o}.${u.key}` : o\n      });\n      n[i.value] = u.value;\n    }\n  }), {\n    key: e,\n    value: t,\n    isReadonly: !1,\n\n    show() {\n      return `{ [_: ${show(e, !1)}]: ${show(t, !1)} }`;\n    }\n\n  });\n  return n;\n}\n\nfunction Tuple(...e) {\n  assertRuntype(...e);\n  const t = create(\"tuple\", (r, n) => Array.isArray(r) ? r.length !== e.length ? expected(\"an array of length \" + e.length, r.length) : createValidationPlaceholder([...r], a => {\n    let s,\n        o = void 0;\n\n    for (let i = 0; i < e.length; i++) {\n      let u = n(e[i], r[i]);\n      u.success ? a[i] = u.value : (o || (o = unableToAssign(r, t)), o.push(typesAreNotCompatible(`[${i}]`, u)), s = s || failure(u.message, {\n        key: u.key ? `[${i}].${u.key}` : `[${i}]`,\n        fullError: o\n      }));\n    }\n\n    return s;\n  }) : expected(\"tuple to be an array\", r), {\n    components: e,\n    isReadonly: !1,\n\n    show() {\n      return `[${e.map(e => show(e, !1)).join(\", \")}]`;\n    }\n\n  });\n  return t;\n}\n\nfunction Brand(e, t) {\n  return assertRuntype(t), create(\"brand\", (e, r, n) => n(t, e), {\n    brand: e,\n    entity: t,\n\n    show(e) {\n      return show(t, e);\n    }\n\n  });\n}\n\nfunction isUnionType(e) {\n  return \"tag\" in e && \"union\" === e.tag;\n}\n\nfunction resolveUnderlyingType(e, t) {\n  return (e => \"tag\" in e && \"lazy\" === e.tag)(e) ? resolveUnderlyingType(e.underlying(), t) : (e => \"tag\" in e && \"brand\" === e.tag)(e) ? resolveUnderlyingType(e.entity, t) : (e => \"tag\" in e && \"constraint\" === e.tag)(e) || (e => \"tag\" in e && \"named\" === e.tag)(e) || \"p\" === t && isParsedValueRuntype(e) ? resolveUnderlyingType(e.underlying, t) : \"t\" === t && isParsedValueRuntype(e) ? e.config.test ? resolveUnderlyingType(e.config.test, t) : s : \"s\" === t && isParsedValueRuntype(e) ? e.config.serialize ? e.config.test ? resolveUnderlyingType(e.config.test, t) : e : s : e;\n}\n\nfunction mapGet(e) {\n  return (t, r) => {\n    const n = e.get(t);\n    if (void 0 !== n) return n;\n    const a = r();\n    return e.set(t, a), a;\n  };\n}\n\nfunction findFields(e, t) {\n  const r = resolveUnderlyingType(e, t),\n        n = [],\n        pushField = (e, r) => {\n    const a = resolveUnderlyingType(r, t);\n    if (isUnionType(a)) for (const t of a.alternatives) pushField(e, t);else n.push([e, a]);\n  };\n\n  if (\"tag\" in (a = r) && \"object\" === a.tag && !r.isPartial) for (const e of Object.keys(r.fields)) pushField(e, r.fields[e]);\n  var a;\n  if ((e => \"tag\" in e && \"tuple\" === e.tag)(r) && r.components.forEach((e, t) => {\n    pushField(\"\" + t, e);\n  }), (e => \"tag\" in e && \"intersect\" === e.tag)(r)) for (const e of r.intersectees) n.push(...findFields(e, t));\n  return n;\n}\n\nfunction Union(...e) {\n  function validateWithKey(e, t) {\n    const r = \"\" + Array.from(t.values()).map(e => show(e, !0)).join(\" | \");\n    return (n, a) => {\n      if (!n || \"object\" != typeof n) return expected(r, n);\n      const s = t.get(n[e]);\n\n      if (s) {\n        const t = a(s, n);\n        return t.success ? t : failure(t.message, {\n          key: `<${/^\\d+$/.test(e) ? `[${e}]` : e}: ${showValue(n[e])}>${t.key ? \".\" + t.key : \"\"}`,\n          fullError: unableToAssign(n, r, t)\n        });\n      }\n\n      {\n        const a = expected(Array.from(t.keys()).map(e => \"string\" == typeof e ? `'${e}'` : e).join(\" | \"), n[e], {\n          key: /^\\d+$/.test(e) ? `[${e}]` : e\n        });\n        return a.fullError = unableToAssign(n, r, typesAreNotCompatible(/^\\d+$/.test(e) ? `[${e}]` : `\"${e}\"`, a.message)), a;\n      }\n    };\n  }\n\n  function validateWithoutKey(e) {\n    return (t, r) => {\n      let a;\n\n      for (const s of e) {\n        const e = r(s, t);\n        if (e.success) return e;\n        a ? a.push(andError(e.fullError || unableToAssign(t, s, e))) : a = unableToAssign(t, n, e.fullError || unableToAssign(t, s, e));\n      }\n\n      return expected(n, t, {\n        fullError: a\n      });\n    };\n  }\n\n  assertRuntype(...e);\n  const t = [];\n\n  for (const r of e) isUnionType(r) ? t.push(...r.alternatives) : t.push(r);\n\n  const validatorOf = e => {\n    const r = t.filter(t => \"never\" !== resolveUnderlyingType(t, e).tag).map(t => [t, findFields(t, e)]),\n          n = r.filter(e => 0 !== e[1].length),\n          a = r.filter(e => 0 === e[1].length),\n          s = (e => {\n      const t = (e => {\n        const t = new Set(e[0]);\n\n        for (const r of e) for (const e of t) r.has(e) || t.delete(e);\n\n        return t;\n      })(e.map(([, e]) => new Set(e.map(([e]) => e)))),\n            r = new Map([\"type\", \"kind\", \"tag\", \"version\"].map(e => [e, new Map()]));\n\n      for (const [a, s] of e) for (const [e, o] of s) if (\"tag\" in (n = o) && \"literal\" === n.tag) {\n        const n = mapGet(r)(e, () => new Map());\n        n.has(o.value) ? t.delete(e) : n.set(o.value, a);\n      } else t.delete(e);\n\n      var n;\n\n      for (const [e, n] of r) if (t.has(e)) return [e, n];\n    })(n);\n\n    if (s && a.length) {\n      const e = s && validateWithKey(s[0], s[1]),\n            t = validateWithoutKey(a.map(e => e[0]));\n      return (r, n) => {\n        const a = e(r, n);\n        if (a.success) return a;\n        const s = t(r, n);\n        return s.success || s.fullError.push(andError(a.fullError ? a.fullError : unableToAssign(r, \"Object\"))), s;\n      };\n    }\n\n    return s ? validateWithKey(s[0], s[1]) : validateWithoutKey(t);\n  },\n        r = lazyValue(() => ({\n    p: validatorOf(\"p\"),\n    s: validatorOf(\"s\"),\n    t: validatorOf(\"t\")\n  })),\n        n = create(\"union\", {\n    p: (e, t) => r().p(e, t),\n    s: (e, t) => r().s(e, t),\n\n    t(e, t) {\n      const n = r().s(e, (e, r) => t(e, r) || success(r));\n      return n.success ? void 0 : n;\n    }\n\n  }, {\n    alternatives: t,\n    match: (...t) => r => {\n      const a = createVisitedState();\n\n      for (let n = 0; n < e.length; n++) {\n        const s = innerValidate(e[n], r, a);\n        if (s.success) return t[n](s.value);\n      }\n\n      n.assert(r);\n    },\n\n    show(e) {\n      return parenthesize(\"\" + t.map(e => show(e, !0)).join(\" | \"), e);\n    }\n\n  });\n\n  return n;\n}\n\nconst parenthesize = (e, t) => t ? `(${e})` : e,\n      e = new Set(),\n      show = (t, r = !1) => {\n  if (e.has(t) && \"lazy\" !== t.tag) return parenthesize(\"CIRCULAR \" + t.tag, r);\n\n  if (t.show) {\n    e.add(t);\n\n    try {\n      return t.show(r);\n    } finally {\n      e.delete(t);\n    }\n  }\n\n  return t.tag;\n},\n      t = \"__internal_runtype_methods__\";\n\nclass ValidationError extends Error {\n  constructor(e) {\n    super(showError(e)), this.name = \"ValidationError\", this.shortMessage = e.message, this.key = e.key, this.fullError = e.fullError;\n  }\n\n}\n\nconst r = create(\"unknown\", e => success(e), {}),\n      Guard = (e, t) => r.withGuard(e, t),\n      n = Literal(void 0),\n      a = Literal(null),\n      s = create(\"never\", e => expected(\"nothing\", e), {}),\n      o = createPrimative(\"boolean\"),\n      i = createPrimative(\"function\"),\n      u = createPrimative(\"number\"),\n      c = createPrimative(\"string\"),\n      l = createPrimative(\"symbol\");\n\nexport { Arr as Array, AsyncContract, o as Boolean, Brand, Constraint, Contract, Enum, i as Function, Guard, InstanceOf, Intersect, KeyOf, Lazy, Literal, Named, s as Never, a as Null, u as Number, Obj as Object, ParsedValue, Partial, Readonly, ReadonlyArray, Record, c as String, l as Symbol, Tuple, n as Undefined, Union, r as Unknown, ValidationError, assertType, showError, show as showType, showValue };","map":{"version":3,"names":["isParsedValueRuntype","e","tag","ParsedValue","t","assertRuntype","create","p","r","n","a","success","cycle","value","innerGuard","createGuardVisitedState","innerMapValidationPlaceholder","Array","isArray","placeholder","unwrap","parse","test","failure","name","show","s","serialize","o","underlying","config","Error","showValue","safeParse","innerValidate","createVisitedState","safeSerialize","innerSerialize","assert","ValidationError","Or","Union","And","Intersect","withConstraint","Constraint","withGuard","withBrand","Brand","withParser","toString","createValidationPlaceholder","i","u","splice","length","Object","assign","Map","innerValidateToPlaceholder","get","set","innerSerializeToPlaceholder","has","Set","add","JSON","stringify","entries","message","expected","unableToAssign","map","toFullError","andError","toLocaleLowerCase","substr","typesAreNotCompatible","fullError","showError","showFullError","key","join","AsyncContract","enforce","Promise","reject","then","Contract","assertType","InternalArr","push","isReadonly","element","asReadonly","Arr","ReadonlyArray","constraint","args","Enum","values","some","filter","enumObject","InstanceOf","ctor","intersectees","parenthesize","KeyOf","keys","sort","lazyValue","Lazy","Literal","Named","hasKey","InternalObject","c","l","isPartial","fields","asPartial","pick","omit","Obj","Partial","createPrimative","Readonly","getExpectedBaseType","alternatives","reduce","Record","getPrototypeOf","prototype","isNaN","Tuple","components","brand","entity","isUnionType","resolveUnderlyingType","mapGet","findFields","pushField","forEach","validateWithKey","from","validateWithoutKey","validatorOf","delete","match","constructor","shortMessage","Guard","Boolean","Function","Never","Null","Number","String","Symbol","Undefined","Unknown","showType"],"sources":["D:/angular/pr1/node_modules/funtypes/lib/index.mjs"],"sourcesContent":["function isParsedValueRuntype(e) {\n  return \"tag\" in e && \"parsed\" === e.tag;\n}\nfunction ParsedValue(e, t) {\n  return (\n    assertRuntype(e),\n    create(\n      \"parsed\",\n      {\n        p: (r, n, a) =>\n          ((e, t, r) => {\n            if (!e.success) return e;\n            if (!e.cycle) {\n              const n = t(e.value);\n              return (n.success && r && innerGuard(r, n.value, createGuardVisitedState())) || n;\n            }\n            return innerMapValidationPlaceholder(\n              Array.isArray(e.placeholder) ? [...e.placeholder] : { ...e.placeholder },\n              () => e.unwrap(),\n              t,\n              r,\n            );\n          })(a(e, r), e => t.parse(e), t.test),\n        t(r, n) {\n          return t.test\n            ? n(t.test, r)\n            : failure((t.name || `ParsedValue<${show(e)}>`) + \" does not support Runtype.test\");\n        },\n        s(r, n, a) {\n          if (!t.serialize)\n            return failure(\n              (t.name || `ParsedValue<${show(e)}>`) + \" does not support Runtype.serialize\",\n            );\n          const s = t.test ? innerGuard(t.test, r, createGuardVisitedState()) : void 0;\n          if (s) return s;\n          const o = t.serialize(r);\n          return o.success ? a(e, o.value) : o;\n        },\n      },\n      {\n        underlying: e,\n        config: t,\n        show() {\n          return t.name || `ParsedValue<${show(e, !1)}>`;\n        },\n      },\n    )\n  );\n}\nfunction assertRuntype(...e) {\n  for (const r of e) if (!r || !r[t]) throw new Error(\"Expected Runtype but got \" + showValue(r));\n}\nfunction create(e, r, n) {\n  function safeParse(e) {\n    return innerValidate(a, e, createVisitedState());\n  }\n  function safeSerialize(e) {\n    return innerSerialize(a, e, createVisitedState());\n  }\n  const a = {\n    ...n,\n    tag: e,\n    assert(e) {\n      const t = innerGuard(a, e, createGuardVisitedState());\n      if (t) throw new ValidationError(t);\n    },\n    parse(e) {\n      const t = safeParse(e);\n      if (!t.success) throw new ValidationError(t);\n      return t.value;\n    },\n    safeParse,\n    test: e => void 0 === innerGuard(a, e, createGuardVisitedState()),\n    serialize(e) {\n      const t = safeSerialize(e);\n      if (!t.success) throw new ValidationError(t);\n      return t.value;\n    },\n    safeSerialize,\n    Or: e => Union(a, e),\n    And: e => Intersect(a, e),\n    withConstraint: (e, t) => Constraint(a, e, t),\n    withGuard: (e, t) => Constraint(a, e, t),\n    withBrand: e => Brand(e, a),\n    withParser: e => ParsedValue(a, e),\n    toString: () => `Runtype<${show(a)}>`,\n    [t]: \"function\" == typeof r ? { p: r } : r,\n  };\n  return a;\n}\nfunction createValidationPlaceholder(e, t) {\n  return innerMapValidationPlaceholder(e, () => t(e) || success(e));\n}\nfunction innerMapValidationPlaceholder(e, t, r, n) {\n  let a,\n    s = !1;\n  const o = {\n    success: !0,\n    cycle: !0,\n    placeholder: e,\n    unwrap() {\n      if (a) return (s = !0), a;\n      a = success(e);\n      const i = t(),\n        u = i.success && r ? r(i.value) : i;\n      if (!u.success) return (a = u);\n      if (s) {\n        const e = ((e, t) =>\n            e === t\n              ? success(t)\n              : Array.isArray(e) && Array.isArray(t)\n              ? (e.splice(0, e.length, ...t), success(e))\n              : e &&\n                \"object\" == typeof e &&\n                !Array.isArray(e) &&\n                t &&\n                \"object\" == typeof t &&\n                !Array.isArray(t)\n              ? (Object.assign(e, t), success(e))\n              : failure(\n                  `Cannot convert a value of type \"${\n                    Array.isArray(e) ? \"Array\" : typeof e\n                  }\" into a value of type \"${\n                    null === t ? \"null\" : Array.isArray(t) ? \"Array\" : typeof t\n                  }\" when it contains cycles.`,\n                ))(a.value, u.value),\n          t = e.success && n && innerGuard(n, e.value, createGuardVisitedState());\n        a = t || e;\n      } else {\n        const e = n && innerGuard(n, u.value, createGuardVisitedState());\n        a = e || u;\n      }\n      return a.success && (o.placeholder = a.value), a;\n    },\n  };\n  return o;\n}\nfunction createVisitedState() {\n  return new Map();\n}\nfunction createGuardVisitedState() {\n  return new Map();\n}\nfunction innerValidate(e, t, r) {\n  const n = innerValidateToPlaceholder(e, t, r);\n  return n.cycle ? n.unwrap() : n;\n}\nfunction innerValidateToPlaceholder(e, r, n) {\n  var a;\n  const s = n,\n    o = e[t],\n    i = null === (a = s.get(e)) || void 0 === a ? void 0 : a.get(r);\n  if (void 0 !== i) return i;\n  const u = o.p(\n    r,\n    (e, t) => innerValidate(e, t, n),\n    (e, t) => innerValidateToPlaceholder(e, t, n),\n  );\n  return u.cycle ? (s.set(e, (s.get(e) || new Map()).set(r, u)), u) : u;\n}\nfunction innerSerialize(e, t, r) {\n  const n = innerSerializeToPlaceholder(e, t, r);\n  return n.cycle ? n.unwrap() : n;\n}\nfunction innerSerializeToPlaceholder(e, r, n) {\n  var a;\n  const s = n,\n    o = e[t],\n    i = null === (a = s.get(e)) || void 0 === a ? void 0 : a.get(r);\n  if (void 0 !== i) return i;\n  let u = (o.s || o.p)(\n    r,\n    (e, t) => innerSerialize(e, t, n),\n    (e, t) => innerSerializeToPlaceholder(e, t, n),\n  );\n  return u.cycle ? (s.set(e, (s.get(e) || new Map()).set(r, u)), u) : u;\n}\nfunction innerGuard(e, r, n) {\n  var a;\n  const s = n,\n    o = e[t];\n  if (r && (\"object\" == typeof r || \"function\" == typeof r)) {\n    if (null === (a = s.get(e)) || void 0 === a ? void 0 : a.has(r)) return;\n    s.set(e, (s.get(e) || new Set()).add(r));\n  }\n  if (o.t) return o.t(r, (e, t) => innerGuard(e, t, n));\n  let i = o.p(\n    r,\n    (e, t) => innerGuard(e, t, n) || success(t),\n    (e, t) => innerGuard(e, t, n) || success(t),\n  );\n  return i.cycle && (i = i.unwrap()), i.success ? void 0 : i;\n}\nfunction showValue(e, r = 3, n = 30) {\n  switch (typeof e) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n      return \"\" + e;\n    case \"string\":\n      return JSON.stringify(e);\n    case \"object\":\n      if (null === e) return \"null\";\n      if (Array.isArray(e)) {\n        if (0 === r || 0 === n) return \"[Array]\";\n        {\n          let t = \"[\",\n            a = 0;\n          for (a = 0; a < e.length && n > t.length; a++)\n            0 !== a && (t += \", \"), (t += showValue(e[a], r - 1, n - t.length));\n          return a < e.length && (t += \" ... \"), (t += \"]\"), t;\n        }\n      }\n      if ((e => \"object\" == typeof e && null != e && t in e)(e)) return e.toString();\n      if (0 === r) return \"{Object}\";\n      {\n        const t = Object.entries(e);\n        let a = \"{\",\n          s = 0;\n        for (s = 0; s < t.length && n > a.length; s++) {\n          0 !== s && (a += \", \");\n          const [e, o] = t[s];\n          a += `${/\\s/.test(e) ? JSON.stringify(e) : e}: ${showValue(o, r - 1, n - a.length)}`;\n        }\n        return s < t.length && (a += \" ... \"), (a += \"}\"), a;\n      }\n    case \"function\":\n    case \"symbol\":\n    case \"undefined\":\n    default:\n      return typeof e;\n  }\n}\nfunction success(e) {\n  return { success: !0, value: e };\n}\nfunction failure(e, t = {}) {\n  return { success: !1, message: e, ...t };\n}\nfunction expected(e, t, r = {}) {\n  return failure(`Expected ${\"string\" == typeof e ? e : show(e)}, but was ${showValue(t)}`, r);\n}\nfunction unableToAssign(e, t, ...r) {\n  return [\n    `Unable to assign ${showValue(e)} to ${\"string\" == typeof t ? t : show(t)}`,\n    ...r.map(toFullError),\n  ];\n}\nfunction andError([e, ...t]) {\n  return [`And ${e[0].toLocaleLowerCase()}${e.substr(1)}`, ...t];\n}\nfunction typesAreNotCompatible(e, ...t) {\n  return [`The types of ${e} are not compatible`, ...t.map(toFullError)];\n}\nfunction toFullError(e) {\n  return \"string\" == typeof e ? [e] : Array.isArray(e) ? e : toFullError(e.fullError || e.message);\n}\nfunction showError(e) {\n  return e.fullError ? showFullError(e.fullError) : e.key ? `${e.message} in ${e.key}` : e.message;\n}\nfunction showFullError([e, ...t], r = \"\") {\n  return [`${r}${e}`, ...t.map(e => showFullError(e, r + \"  \"))].join(\"\\n\");\n}\nfunction AsyncContract(e, t) {\n  return {\n    enforce: r => (...n) => {\n      if (n.length < e.length)\n        return Promise.reject(\n          new ValidationError({\n            message: `Expected ${e.length} arguments but only received ${n.length}`,\n          }),\n        );\n      const a = createVisitedState();\n      for (let t = 0; t < e.length; t++) {\n        const r = innerValidate(e[t], n[t], a);\n        if (!r.success) return Promise.reject(new ValidationError(r));\n        n[t] = r.value;\n      }\n      const s = r(...n);\n      return s instanceof Promise\n        ? s.then(e => {\n            const r = innerGuard(t, e, createGuardVisitedState());\n            if (r) throw new ValidationError(r);\n            return e;\n          })\n        : Promise.reject(\n            new ValidationError({\n              message: \"Expected function to return a promise, but instead got \" + s,\n            }),\n          );\n    },\n  };\n}\nfunction Contract(e, t) {\n  return {\n    enforce: r => (...n) => {\n      if (n.length < e.length)\n        throw new ValidationError({\n          message: `Expected ${e.length} arguments but only received ${n.length}`,\n        });\n      const a = createVisitedState();\n      for (let t = 0; t < e.length; t++) {\n        const r = innerValidate(e[t], n[t], a);\n        if (!r.success) throw new ValidationError(r);\n        n[t] = r.value;\n      }\n      const s = r(...n),\n        o = innerGuard(t, s, createGuardVisitedState());\n      if (o) throw new ValidationError(o);\n      return s;\n    },\n  };\n}\nfunction assertType(e, t) {\n  e.assert(t);\n}\nfunction InternalArr(e, t) {\n  assertRuntype(e);\n  const r = create(\n    \"array\",\n    (t, n) =>\n      Array.isArray(t)\n        ? createValidationPlaceholder([...t], a => {\n            let s,\n              o = void 0;\n            for (let i = 0; i < t.length; i++) {\n              const u = n(e, t[i]);\n              u.success\n                ? (a[i] = u.value)\n                : (o || (o = unableToAssign(t, r)),\n                  o.push(typesAreNotCompatible(`[${i}]`, u)),\n                  (s =\n                    s ||\n                    failure(u.message, {\n                      key: u.key ? `[${i}].${u.key}` : `[${i}]`,\n                      fullError: o,\n                    })));\n            }\n            return s;\n          })\n        : expected(\"an Array\", t),\n    {\n      isReadonly: t,\n      element: e,\n      show() {\n        return `${t ? \"readonly \" : \"\"}${show(e, !0)}[]`;\n      },\n    },\n  );\n  return t || (r.asReadonly = () => InternalArr(e, !0)), r;\n}\nfunction Arr(e) {\n  return InternalArr(e, !1);\n}\nfunction ReadonlyArray(e) {\n  return InternalArr(e, !0);\n}\nfunction Constraint(e, t, r) {\n  assertRuntype(e);\n  const n = create(\n    \"constraint\",\n    (a, s) => {\n      const o = r && r.name,\n        i = s(e, a);\n      if (!i.success) return i;\n      const u = t(i.value);\n      if (!u || \"string\" == typeof u) {\n        const e = \"string\" == typeof u ? u : `${showValue(a)} failed ${o || \"constraint\"} check`;\n        return failure(e, { fullError: unableToAssign(a, n, e) });\n      }\n      return success(i.value);\n    },\n    {\n      underlying: e,\n      constraint: t,\n      name: r && r.name,\n      args: r && r.args,\n      show(t) {\n        return (r && r.name) || `WithConstraint<${show(e, t)}>`;\n      },\n    },\n  );\n  return n;\n}\nfunction Enum(e, t) {\n  const r = Object.values(t),\n    n = new Set(r.some(e => \"number\" == typeof e) ? r.filter(e => \"number\" == typeof e) : r);\n  return create(\"enum\", t => (n.has(t) ? success(t) : expected(e, t)), {\n    enumObject: t,\n    show: () => e,\n  });\n}\nfunction InstanceOf(e) {\n  return create(\"instanceof\", t => (t instanceof e ? success(t) : expected(\"\" + e.name, t)), {\n    ctor: e,\n    show() {\n      return `InstanceOf<${e.name}>`;\n    },\n  });\n}\nfunction Intersect(...e) {\n  return (\n    assertRuntype(...e),\n    create(\n      \"intersect\",\n      (t, r) => {\n        if (Array.isArray(t))\n          return createValidationPlaceholder([...t], t => {\n            for (const n of e) {\n              let e = r(n, t);\n              if (!e.success) return e;\n              if (!Array.isArray(e.value))\n                return failure(\n                  `The validator ${show(\n                    n,\n                  )} attempted to convert the type of this value from an array to something else. That conversion is not valid as the child of an intersect`,\n                );\n              t.splice(0, t.length, ...e.value);\n            }\n          });\n        if (t && \"object\" == typeof t)\n          return createValidationPlaceholder(Object.create(null), n => {\n            for (const a of e) {\n              let e = r(a, t);\n              if (!e.success) return e;\n              if (!e.value || \"object\" != typeof e.value)\n                return failure(\n                  `The validator ${show(\n                    a,\n                  )} attempted to convert the type of this value from an object to something else. That conversion is not valid as the child of an intersect`,\n                );\n              Object.assign(n, e.value);\n            }\n          });\n        let n = t;\n        for (const t of e) {\n          let e = r(t, n);\n          if (!e.success) return e;\n          n = e.value;\n        }\n        return success(n);\n      },\n      {\n        intersectees: e,\n        show(t) {\n          return parenthesize(\"\" + e.map(e => show(e, !0)).join(\" & \"), t);\n        },\n      },\n    )\n  );\n}\nfunction KeyOf(e) {\n  const t = new Set(Object.keys(e)),\n    r = [...t]\n      .sort()\n      .map(e => showValue(e))\n      .join(\" | \");\n  return create(\n    \"keyOf\",\n    e => (t.has(\"number\" == typeof e ? e.toString() : e) ? success(e) : expected(r, e)),\n    { keys: t, show: e => parenthesize(r, e) },\n  );\n}\nfunction lazyValue(e) {\n  let t;\n  return () => t || (t = e());\n}\nfunction Lazy(e) {\n  const t = lazyValue(e);\n  return create(\"lazy\", (e, r, n) => n(t(), e), {\n    underlying: t,\n    show(e) {\n      return show(t(), e);\n    },\n  });\n}\nfunction Literal(e) {\n  return create(\n    \"literal\",\n    t =>\n      t === e\n        ? success(t)\n        : failure(\n            `Expected literal ${showValue(e)}, but was ${showValue(t)}${\n              typeof t != typeof e ? ` (i.e. a ${typeof t})` : \"\"\n            }`,\n          ),\n    {\n      value: e,\n      show() {\n        return showValue(e);\n      },\n    },\n  );\n}\nfunction Named(e, t) {\n  return (\n    assertRuntype(t),\n    create(\"named\", (e, r) => r(t, e), {\n      underlying: t,\n      name: e,\n      show() {\n        return e;\n      },\n    })\n  );\n}\nfunction hasKey(e, t) {\n  return \"object\" == typeof t && e in t;\n}\nfunction InternalObject(e, t, r) {\n  assertRuntype(...Object.values(e));\n  const n = create(\n    \"object\",\n    (r, a) =>\n      null == r || \"object\" != typeof r\n        ? expected(n, r)\n        : Array.isArray(r)\n        ? failure(`Expected ${show(n)}, but was an Array`)\n        : createValidationPlaceholder(Object.create(null), s => {\n            let o,\n              i = void 0;\n            for (const u in e)\n              if (!t || (hasKey(u, r) && void 0 !== r[u])) {\n                const c = t || hasKey(u, r) ? r[u] : void 0;\n                let l = a(e[u], c);\n                l.success\n                  ? (s[u] = l.value)\n                  : (i || (i = unableToAssign(r, n)),\n                    i.push(typesAreNotCompatible(`\"${u}\"`, l)),\n                    (o =\n                      o || failure(l.message, { key: l.key ? `${u}.${l.key}` : u, fullError: i })));\n              }\n            return o;\n          }),\n    {\n      isPartial: t,\n      isReadonly: r,\n      fields: e,\n      asPartial: () => InternalObject(n.fields, !0, n.isReadonly),\n      asReadonly: () => InternalObject(n.fields, n.isPartial, !0),\n      pick(...n) {\n        const a = {};\n        for (const t of n) a[t] = e[t];\n        return InternalObject(a, t, r);\n      },\n      omit(...n) {\n        const a = { ...e };\n        for (const e of n) e in a && delete a[e];\n        return InternalObject(a, t, r);\n      },\n      show() {\n        const n = Object.keys(e);\n        return n.length\n          ? `{ ${n\n              .map(n => `${r ? \"readonly \" : \"\"}${n}${t ? \"?\" : \"\"}: ${show(e[n], !1)};`)\n              .join(\" \")} }`\n          : \"{}\";\n      },\n    },\n  );\n  return n;\n}\nfunction Obj(e) {\n  return InternalObject(e, !1, !1);\n}\nfunction Partial(e) {\n  return InternalObject(e, !0, !1);\n}\nfunction createPrimative(e) {\n  return create(\n    e,\n    t =>\n      typeof t === e\n        ? success(t)\n        : failure(\n            `Expected ${e}, but was ${(e =>\n              `${showValue(e)}${\"string\" == typeof e ? \" (i.e. a string literal)\" : \"\"}`)(t)}`,\n          ),\n    {},\n  );\n}\nfunction Readonly(e) {\n  const t = { ...e };\n  t.isReadonly = !0;\n  for (const r of [\"asPartial\", \"pick\", \"omit\"])\n    \"function\" == typeof e[r] && (t[r] = (...t) => Readonly(e[r](...t)));\n  return t;\n}\nfunction getExpectedBaseType(e) {\n  switch (e.tag) {\n    case \"string\":\n      return \"string\";\n    case \"number\":\n      return \"number\";\n    case \"literal\":\n      return typeof e.value;\n    case \"union\":\n      const t = e.alternatives.map(getExpectedBaseType);\n      return t.reduce((e, t) => (e === t ? e : \"mixed\"), t[0]);\n    case \"constraint\":\n      return getExpectedBaseType(e.underlying);\n  }\n}\nfunction Record(e, t) {\n  assertRuntype(e, t);\n  const r = lazyValue(() => getExpectedBaseType(e)),\n    n = create(\n      \"record\",\n      (a, s) =>\n        null == a || \"object\" != typeof a\n          ? expected(n, a)\n          : Object.getPrototypeOf(a) !== Object.prototype && null !== Object.getPrototypeOf(a)\n          ? Array.isArray(a)\n            ? failure(\"Expected Record, but was Array\")\n            : failure(`Expected ${show(n)}, but was ${Object.getPrototypeOf(a)}`)\n          : createValidationPlaceholder(Object.create(null), n => {\n              for (const o in a) {\n                let i = null;\n                if (\"number\" === r()) {\n                  if (isNaN(+o)) return expected(\"record key to be a number\", o);\n                  i = s(e, +o);\n                } else\n                  \"string\" === r()\n                    ? (i = s(e, o))\n                    : ((i = s(e, o)), i.success || isNaN(+o) || (i = s(e, +o)));\n                if (!i.success) return expected(\"record key to be \" + show(e), o);\n                const u = s(t, a[o]);\n                if (!u.success) return failure(u.message, { key: u.key ? `${o}.${u.key}` : o });\n                n[i.value] = u.value;\n              }\n            }),\n      {\n        key: e,\n        value: t,\n        isReadonly: !1,\n        show() {\n          return `{ [_: ${show(e, !1)}]: ${show(t, !1)} }`;\n        },\n      },\n    );\n  return n;\n}\nfunction Tuple(...e) {\n  assertRuntype(...e);\n  const t = create(\n    \"tuple\",\n    (r, n) =>\n      Array.isArray(r)\n        ? r.length !== e.length\n          ? expected(\"an array of length \" + e.length, r.length)\n          : createValidationPlaceholder([...r], a => {\n              let s,\n                o = void 0;\n              for (let i = 0; i < e.length; i++) {\n                let u = n(e[i], r[i]);\n                u.success\n                  ? (a[i] = u.value)\n                  : (o || (o = unableToAssign(r, t)),\n                    o.push(typesAreNotCompatible(`[${i}]`, u)),\n                    (s =\n                      s ||\n                      failure(u.message, {\n                        key: u.key ? `[${i}].${u.key}` : `[${i}]`,\n                        fullError: o,\n                      })));\n              }\n              return s;\n            })\n        : expected(\"tuple to be an array\", r),\n    {\n      components: e,\n      isReadonly: !1,\n      show() {\n        return `[${e.map(e => show(e, !1)).join(\", \")}]`;\n      },\n    },\n  );\n  return t;\n}\nfunction Brand(e, t) {\n  return (\n    assertRuntype(t),\n    create(\"brand\", (e, r, n) => n(t, e), {\n      brand: e,\n      entity: t,\n      show(e) {\n        return show(t, e);\n      },\n    })\n  );\n}\nfunction isUnionType(e) {\n  return \"tag\" in e && \"union\" === e.tag;\n}\nfunction resolveUnderlyingType(e, t) {\n  return (e => \"tag\" in e && \"lazy\" === e.tag)(e)\n    ? resolveUnderlyingType(e.underlying(), t)\n    : (e => \"tag\" in e && \"brand\" === e.tag)(e)\n    ? resolveUnderlyingType(e.entity, t)\n    : (e => \"tag\" in e && \"constraint\" === e.tag)(e) ||\n      (e => \"tag\" in e && \"named\" === e.tag)(e) ||\n      (\"p\" === t && isParsedValueRuntype(e))\n    ? resolveUnderlyingType(e.underlying, t)\n    : \"t\" === t && isParsedValueRuntype(e)\n    ? e.config.test\n      ? resolveUnderlyingType(e.config.test, t)\n      : s\n    : \"s\" === t && isParsedValueRuntype(e)\n    ? e.config.serialize\n      ? e.config.test\n        ? resolveUnderlyingType(e.config.test, t)\n        : e\n      : s\n    : e;\n}\nfunction mapGet(e) {\n  return (t, r) => {\n    const n = e.get(t);\n    if (void 0 !== n) return n;\n    const a = r();\n    return e.set(t, a), a;\n  };\n}\nfunction findFields(e, t) {\n  const r = resolveUnderlyingType(e, t),\n    n = [],\n    pushField = (e, r) => {\n      const a = resolveUnderlyingType(r, t);\n      if (isUnionType(a)) for (const t of a.alternatives) pushField(e, t);\n      else n.push([e, a]);\n    };\n  if (\"tag\" in (a = r) && \"object\" === a.tag && !r.isPartial)\n    for (const e of Object.keys(r.fields)) pushField(e, r.fields[e]);\n  var a;\n  if (\n    ((e => \"tag\" in e && \"tuple\" === e.tag)(r) &&\n      r.components.forEach((e, t) => {\n        pushField(\"\" + t, e);\n      }),\n    (e => \"tag\" in e && \"intersect\" === e.tag)(r))\n  )\n    for (const e of r.intersectees) n.push(...findFields(e, t));\n  return n;\n}\nfunction Union(...e) {\n  function validateWithKey(e, t) {\n    const r =\n      \"\" +\n      Array.from(t.values())\n        .map(e => show(e, !0))\n        .join(\" | \");\n    return (n, a) => {\n      if (!n || \"object\" != typeof n) return expected(r, n);\n      const s = t.get(n[e]);\n      if (s) {\n        const t = a(s, n);\n        return t.success\n          ? t\n          : failure(t.message, {\n              key: `<${/^\\d+$/.test(e) ? `[${e}]` : e}: ${showValue(n[e])}>${\n                t.key ? \".\" + t.key : \"\"\n              }`,\n              fullError: unableToAssign(n, r, t),\n            });\n      }\n      {\n        const a = expected(\n          Array.from(t.keys())\n            .map(e => (\"string\" == typeof e ? `'${e}'` : e))\n            .join(\" | \"),\n          n[e],\n          { key: /^\\d+$/.test(e) ? `[${e}]` : e },\n        );\n        return (\n          (a.fullError = unableToAssign(\n            n,\n            r,\n            typesAreNotCompatible(/^\\d+$/.test(e) ? `[${e}]` : `\"${e}\"`, a.message),\n          )),\n          a\n        );\n      }\n    };\n  }\n  function validateWithoutKey(e) {\n    return (t, r) => {\n      let a;\n      for (const s of e) {\n        const e = r(s, t);\n        if (e.success) return e;\n        a\n          ? a.push(andError(e.fullError || unableToAssign(t, s, e)))\n          : (a = unableToAssign(t, n, e.fullError || unableToAssign(t, s, e)));\n      }\n      return expected(n, t, { fullError: a });\n    };\n  }\n  assertRuntype(...e);\n  const t = [];\n  for (const r of e) isUnionType(r) ? t.push(...r.alternatives) : t.push(r);\n  const validatorOf = e => {\n      const r = t\n          .filter(t => \"never\" !== resolveUnderlyingType(t, e).tag)\n          .map(t => [t, findFields(t, e)]),\n        n = r.filter(e => 0 !== e[1].length),\n        a = r.filter(e => 0 === e[1].length),\n        s = (e => {\n          const t = (e => {\n              const t = new Set(e[0]);\n              for (const r of e) for (const e of t) r.has(e) || t.delete(e);\n              return t;\n            })(e.map(([, e]) => new Set(e.map(([e]) => e)))),\n            r = new Map([\"type\", \"kind\", \"tag\", \"version\"].map(e => [e, new Map()]));\n          for (const [a, s] of e)\n            for (const [e, o] of s)\n              if (\"tag\" in (n = o) && \"literal\" === n.tag) {\n                const n = mapGet(r)(e, () => new Map());\n                n.has(o.value) ? t.delete(e) : n.set(o.value, a);\n              } else t.delete(e);\n          var n;\n          for (const [e, n] of r) if (t.has(e)) return [e, n];\n        })(n);\n      if (s && a.length) {\n        const e = s && validateWithKey(s[0], s[1]),\n          t = validateWithoutKey(a.map(e => e[0]));\n        return (r, n) => {\n          const a = e(r, n);\n          if (a.success) return a;\n          const s = t(r, n);\n          return (\n            s.success ||\n              s.fullError.push(andError(a.fullError ? a.fullError : unableToAssign(r, \"Object\"))),\n            s\n          );\n        };\n      }\n      return s ? validateWithKey(s[0], s[1]) : validateWithoutKey(t);\n    },\n    r = lazyValue(() => ({ p: validatorOf(\"p\"), s: validatorOf(\"s\"), t: validatorOf(\"t\") })),\n    n = create(\n      \"union\",\n      {\n        p: (e, t) => r().p(e, t),\n        s: (e, t) => r().s(e, t),\n        t(e, t) {\n          const n = r().s(e, (e, r) => t(e, r) || success(r));\n          return n.success ? void 0 : n;\n        },\n      },\n      {\n        alternatives: t,\n        match: (...t) => r => {\n          const a = createVisitedState();\n          for (let n = 0; n < e.length; n++) {\n            const s = innerValidate(e[n], r, a);\n            if (s.success) return t[n](s.value);\n          }\n          n.assert(r);\n        },\n        show(e) {\n          return parenthesize(\"\" + t.map(e => show(e, !0)).join(\" | \"), e);\n        },\n      },\n    );\n  return n;\n}\nconst parenthesize = (e, t) => (t ? `(${e})` : e),\n  e = new Set(),\n  show = (t, r = !1) => {\n    if (e.has(t) && \"lazy\" !== t.tag) return parenthesize(\"CIRCULAR \" + t.tag, r);\n    if (t.show) {\n      e.add(t);\n      try {\n        return t.show(r);\n      } finally {\n        e.delete(t);\n      }\n    }\n    return t.tag;\n  },\n  t = \"__internal_runtype_methods__\";\nclass ValidationError extends Error {\n  constructor(e) {\n    super(showError(e)),\n      (this.name = \"ValidationError\"),\n      (this.shortMessage = e.message),\n      (this.key = e.key),\n      (this.fullError = e.fullError);\n  }\n}\nconst r = create(\"unknown\", e => success(e), {}),\n  Guard = (e, t) => r.withGuard(e, t),\n  n = Literal(void 0),\n  a = Literal(null),\n  s = create(\"never\", e => expected(\"nothing\", e), {}),\n  o = createPrimative(\"boolean\"),\n  i = createPrimative(\"function\"),\n  u = createPrimative(\"number\"),\n  c = createPrimative(\"string\"),\n  l = createPrimative(\"symbol\");\nexport {\n  Arr as Array,\n  AsyncContract,\n  o as Boolean,\n  Brand,\n  Constraint,\n  Contract,\n  Enum,\n  i as Function,\n  Guard,\n  InstanceOf,\n  Intersect,\n  KeyOf,\n  Lazy,\n  Literal,\n  Named,\n  s as Never,\n  a as Null,\n  u as Number,\n  Obj as Object,\n  ParsedValue,\n  Partial,\n  Readonly,\n  ReadonlyArray,\n  Record,\n  c as String,\n  l as Symbol,\n  Tuple,\n  n as Undefined,\n  Union,\n  r as Unknown,\n  ValidationError,\n  assertType,\n  showError,\n  show as showType,\n  showValue,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}